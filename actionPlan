# Как я создавал это проект

# Сoздаём виртуальное окружение
python -m venv venv
# Активируем виртуальное окружение
.\venv\Scripts\activate
# Устанавливаем библиотеки из requirements.txt (Django)
pip install -r requirements.txt
# Переходим в папку project
cd .\project

# Cоздём новые миграции
python manage.py makemigrations
# Применяем миграции
python manage.py migrate
# Запускаем окно командной строки
python manage.py shell

from newapp.models import *

# Проект Django
#______________________________________
django-admin startproject projectDjango
# - - - - - - - - - - - - - - - - - - -
#
# Утилита django-admin служит для выполнения разнообразных
#                      административных задач.
#
# Команда startproject указывает ей создать новый проект
#                      с именем, записанным после
#                      этой команды.
#
# manage.py — программный файл с кодом
#             одноименной утилиты, с использованием
#             которой производятся различные действия
#             над самим проектом.
#
# Внутренняя папка projectDjango — формирует пакет языка
#                                  Python, содержащий модули,
#                                  которые относятся к проекту
#                                  целиком и задают его конфигурацию
#                                  (ключевые настройки).
#                                  Название этого пакета совпадает
#                                  с названием проекта и менять его
#                                  не стоит.
#
# В данном пакете лежат файлы:
#
# __init.py__ — пустой файл, сообщающий Python,
#               что папка, в которой он находится,
#               является полноценным пакетом.
#
# settings.py — модуль с настройками самого проекта.
#               Включает описание конфигурации
#               базы данных проекта, пути ключевых папок,
#               важные параметры, связанные с
#               безопасностью.
#
# urls.py — модуль с маршрутами уровня проекта.
#
# wsgi.py — модуль, связывающий проект с веб-сервером.
#           Используется при публикации готового сайта
#           в Интернете.
#
# asgi.py — модуль предназначенный для обеспечения
#           стандартного интерфейса между асинхронными
#           веб-серверами Python, фреймворками и приложениями.
#
# Проект Django можно поместить в любое место
#               файловой системы компьютера.
#
# Чтобы создавать свои приложения, которые реализуют
# определенный функционал. Для создания приложения в
# проекте применяется команда
#_________________________________________
python manage.py startapp название_проекта
# - - - - - - - - - - - - - - - - - - - - -
#
# Чтобы запустить веб-сервер необходимо запустить
# командную строку в папке проекта и отдать команду:
#__________________
manage.py runserver
# - - - - - - - - -
# Команда runserver запускает отладочный веб-сервер.
#